/Users/paulhenshaw/Desktop/OldSkool/app/build.gradle:42: Warning: A newer version of androidx.core:core-ktx than 1.12.0 is available: 1.15.0 [GradleDependency]
    implementation 'androidx.core:core-ktx:1.12.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/build.gradle:43: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.0 [GradleDependency]
    implementation 'androidx.appcompat:appcompat:1.6.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/build.gradle:44: Warning: A newer version of com.google.android.material:material than 1.11.0 is available: 1.12.0 [GradleDependency]
    implementation 'com.google.android.material:material:1.11.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/build.gradle:45: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.0 [GradleDependency]
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/build.gradle:46: Warning: A newer version of androidx.navigation:navigation-fragment-ktx than 2.7.6 is available: 2.8.6 [GradleDependency]
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.6'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/build.gradle:47: Warning: A newer version of androidx.navigation:navigation-ui-ktx than 2.7.6 is available: 2.8.6 [GradleDependency]
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.6'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/build.gradle:48: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-ktx than 2.7.0 is available: 2.8.7 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/build.gradle:49: Warning: A newer version of androidx.lifecycle:lifecycle-livedata-ktx than 2.7.0 is available: 2.8.7 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/build.gradle:50: Warning: A newer version of androidx.lifecycle:lifecycle-runtime-ktx than 2.7.0 is available: 2.8.7 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/Users/paulhenshaw/Desktop/OldSkool/app/src/main/java/com/oldskool/sessions/ArchivesFragment.kt:20: Warning: Using setJavaScriptEnabled can introduce XSS vulnerabilities into your application, review carefully [SetJavaScriptEnabled]
        webView.settings.javaScriptEnabled = true
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/java/com/oldskool/sessions/ContactFragment.kt:20: Warning: Using setJavaScriptEnabled can introduce XSS vulnerabilities into your application, review carefully [SetJavaScriptEnabled]
        webView.settings.javaScriptEnabled = true
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/java/com/oldskool/sessions/InfoFragment.kt:20: Warning: Using setJavaScriptEnabled can introduce XSS vulnerabilities into your application, review carefully [SetJavaScriptEnabled]
        webView.settings.javaScriptEnabled = true
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/java/com/oldskool/sessions/LiveFragment.kt:24: Warning: Using setJavaScriptEnabled can introduce XSS vulnerabilities into your application, review carefully [SetJavaScriptEnabled]
                javaScriptEnabled = true
                ~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/java/com/oldskool/sessions/ui/LiveFragment.kt:36: Warning: Using setJavaScriptEnabled can introduce XSS vulnerabilities into your application, review carefully [SetJavaScriptEnabled]
                javaScriptEnabled = true
                ~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/java/com/oldskool/sessions/ui/WebViewFragment.kt:29: Warning: Using setJavaScriptEnabled can introduce XSS vulnerabilities into your application, review carefully [SetJavaScriptEnabled]
            settings.javaScriptEnabled = true
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "SetJavaScriptEnabled":
   Your code should not invoke setJavaScriptEnabled if you are not sure that
   your app really requires JavaScript support.

   https://goo.gle/SetJavaScriptEnabled
   https://developer.android.com/training/articles/security-tips

/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/layout/activity_main.xml:6: Warning: Possible overdraw: Root element paints background @color/black with a theme that also paints a background (inferred theme is @style/Theme.OldSkool) [Overdraw]
    android:background="@color/black">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/layout/fragment_archives.xml:6: Warning: Possible overdraw: Root element paints background @android:color/black with a theme that also paints a background (inferred theme is @style/Theme.OldSkool) [Overdraw]
    android:background="@android:color/black">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/layout/fragment_contact.xml:6: Warning: Possible overdraw: Root element paints background @android:color/black with a theme that also paints a background (inferred theme is @style/Theme.OldSkool) [Overdraw]
    android:background="@android:color/black">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/layout/fragment_info.xml:6: Warning: Possible overdraw: Root element paints background @android:color/black with a theme that also paints a background (inferred theme is @style/Theme.OldSkool) [Overdraw]
    android:background="@android:color/black">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/layout/fragment_live.xml:6: Warning: Possible overdraw: Root element paints background @android:color/black with a theme that also paints a background (inferred theme is @style/Theme.OldSkool) [Overdraw]
    android:background="@android:color/black">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "Overdraw":
   If you set a background drawable on a root view, then you should use a
   custom theme where the theme background is null. Otherwise, the theme
   background will be painted first, only to have your custom background
   completely cover it; this is called "overdraw".

   NOTE: This detector relies on figuring out which layouts are associated
   with which activities based on scanning the Java code, and it's currently
   doing that using an inexact pattern matching algorithm. Therefore, it can
   incorrectly conclude which activity the layout is associated with and then
   wrongly complain that a background-theme is hidden.

   If you want your custom background on multiple pages, then you should
   consider making a custom theme with your custom background and just using
   that theme instead of a root element background.

   Of course it's possible that your custom drawable is translucent and you
   want it to be mixed with the background. However, you will get better
   performance if you pre-mix the background with your drawable and use that
   resulting image or color as a custom theme background instead.

/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/values/colors.xml:9: Warning: The resource R.color.tab_selected appears to be unused [UnusedResources]
    <color name="tab_selected">#FFA500</color>
           ~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/values/colors.xml:10: Warning: The resource R.color.tab_unselected appears to be unused [UnusedResources]
    <color name="tab_unselected">#FFFFFF</color>
           ~~~~~~~~~~~~~~~~~~~~~
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/drawable/header_image.xml:2: Warning: The resource R.drawable.header_image appears to be unused [UnusedResources]
<shape xmlns:android="http://schemas.android.com/apk/res/android">
^

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml:2: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml:2: Warning: The application adaptive roundIcon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^

   Explanation for issues of type "MonochromeLauncherIcon":
   If android:roundIcon and android:icon are both in your manifest, you must
   either remove the reference to android:roundIcon if it is not needed; or,
   supply the monochrome icon in the drawable defined by the android:roundIcon
   and android:icon attribute.

   For example, if android:roundIcon and android:icon are both in the
   manifest, a launcher might choose to use android:roundIcon over
   android:icon to display the adaptive app icon. Therefore, your themed
   application iconwill not show if your monochrome attribute is not also
   specified in android:roundIcon.

/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/drawable/header.png: Warning: Found bitmap drawable res/drawable/header.png in densityless folder [IconLocation]

   Explanation for issues of type "IconLocation":
   The res/drawable folder is intended for density-independent graphics such
   as shapes defined in XML. For bitmaps, move it to drawable-mdpi and
   consider providing higher and lower resolution versions in drawable-ldpi,
   drawable-hdpi and drawable-xhdpi. If the icon really is density independent
   (for example a solid color) you can place it in drawable-nodpi.

   https://developer.android.com/guide/practices/screens_support.html

/Users/paulhenshaw/Desktop/OldSkool/app/src/main/res/layout/activity_main.xml:8: Warning: Missing contentDescription attribute on image [ContentDescription]
    <ImageView
     ~~~~~~~~~

   Explanation for issues of type "ContentDescription":
   Non-textual widgets like ImageViews and ImageButtons should use the
   contentDescription attribute to specify a textual description of the widget
   such that screen readers and other accessibility tools can adequately
   describe the user interface.

   Note that elements in application screens that are purely decorative and do
   not provide any content or enable a user action should not have
   accessibility content descriptions. In this case, set their descriptions to
   @null. If your app's minSdkVersion is 16 or higher, you can instead set
   these graphical elements' android:importantForAccessibility attributes to
   no.

   Note that for text fields, you should not set both the hint and the
   contentDescription attributes since the hint will never be shown. Just set
   the hint.

   https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases

0 errors, 27 warnings
